// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var SquareVerifier = artifacts.require("SquareVerifier");
const correctProof = require("../../zokrates/code/square2/proof.json");

contract("SquareVerifier", (accounts) => {
  // Test verification with correct proof
  // - use the contents from proof.json generated from zokrates steps
  const owner = accounts[0];

  beforeEach(async () => {
    this.contract = await SquareVerifier.new({ from: owner });
  });

  it("should verify with correct proof", async () => {
    let result = await this.contract.verifyTx.call(
      ...Object.values(correctProof.proof),
      correctProof.inputs
    );
    assert.equal(result, true);
  });

  // Test verification with incorrect proof
  it("should not verify with incorrect proof", async () => {
    let result = await this.contract.verifyTx.call(
      ...Object.values(correctProof.proof),
      [1, 2]
    );
    assert.equal(result, false);
  });
});
